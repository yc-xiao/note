http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html

docker:
    补充说明:
        官方镜像加载很慢，切换为国内镜像。
        docket需要root权限，可以将用户添加到指定组　　sudo usermod -aG docker $USER    
        Docker 是服务器----客户端架构。命令行运行docker命令的时候，需要本机有 Docker 服务。 # sudo service docker start

    优点:启动一个容器(进程)，快，资源占用少，体积小。
    组成:镜像、容器、仓库

    image 镜像:是docker的基本，容器通过加载镜像启动服务。 
        镜像可以是ubuntun，python,可以理解为是一个项目，集成好的项目。
        镜像可以被继承，在继承的基础上添加需要的工具，在生成新的镜像。
        docker image # 镜像有一套处理命令，可以查看镜像命令。
        类比python pip库，镜像也存在一个仓库。
        常用的有:
            docker image ls
            docker image rm [imageName]

    contain 容器:
        docker container # 容器也有一套处理命令，可以查看容器命令
        docker container run --help (执行参数)
        docker container run image (加载镜像到容器内)
        docker container run hello-world(如果没有该镜像会执行docket image pull)
        docker container run -p 8000:3000 -it koa-demo /bin/bash
            -p 端口8000映射到容器端口3000, 
            -it 容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器。
            /bin/bash：容器启动以后，内部第一个执行的命令。这里是启动 Bash，保证用户可以使用 Shell。
        docker exec -it koa-demo bash # 进入容器
        
    制作Docker容器:
        在指定项目下面新建Dockerfile
        docker image build -t image_name #　生成镜像   
        向Dockerfile写入
            FROM node:8.4
            COPY . /app
            WORKDIR /app
            RUN npm install --registry=https://registry.npm.taobao.org
            EXPOSE 3000    
            CMD 
            # 说明        
            # FROM: 继承那个镜像
            # COPY: 复制文件到镜像内
            # WORKDIR: 镜像内的工作目录
            # RUN: 创建镜像前的准备工作，下载第三方安装包等，可以有多个RUN命令
            # EXPOSE 暴露端口给外部
            # CMD 启动容器时执行的命令，只有一个





